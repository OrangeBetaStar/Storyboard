function theFrame(startTime, speed) {
	var realSpeed = speed * 2857; // Speed of scroll.
	var realFirstSpeedEnd = 1071 + startTime; // End of elongation part (approx mid way)
	var realSecondSpeedEnd = startTime + realSpeed - 715; // Ends earlier than any other layer.
	var realSecondSpeedEndMiddle = startTime + realSpeed - 357; // Ends middle way of layer.
	var realSecondSpeedEndOuter = startTime + realSpeed; // Ends last!!!
	
	var middleLayerDelay = 357;
	var outerLayerDelay = 715;
	
	var lineThickness = 0.8; // Just 1 is okay! Nvm... 0.8?
	
	var bottomStartingX = -150; // Starting X-pos
	var bottomEndingX = 750; // Ending X-pos
	var bottomStartingY = 380; //Ending Y-pos
	
	var topStartingX = 750;
	var topEndingX = -150;
	var topStartingY = 32;
	
	// var randomize = rand(1,10);
	var primaryLength = 1;
	var secondaryLength = 20;
	
	// ----------------------- FIRST LAYER ---------- Top -----------------------------------------
	
	var squareFrameUpperInner = new Sprite("SB BG/square.png");
	
	squareFrameUpperInner.move(0, startTime, realSecondSpeedEnd, topStartingX, topStartingY, topEndingX, topStartingY);
	squareFrameUpperInner.scaleVec(1, startTime, realFirstSpeedEnd, primaryLength, lineThickness, secondaryLength, lineThickness); //First run
	squareFrameUpperInner.scaleVec(2, realFirstSpeedEnd, realSecondSpeedEnd, secondaryLength, lineThickness, primaryLength,lineThickness); //Second run

	

	// ----------------------- SECOND LAYER --------- TOP ------------------------------------------
	
	var squareFrameUpperMiddle = new Sprite("SB BG/square.png");
	
	squareFrameUpperMiddle.move(0, startTime + middleLayerDelay, realSecondSpeedEnd + middleLayerDelay, topStartingX, (topStartingY + 30), topEndingX, (topStartingY + 30));
	squareFrameUpperMiddle.scaleVec(1, startTime + middleLayerDelay, realFirstSpeedEnd + middleLayerDelay, primaryLength, lineThickness, secondaryLength, lineThickness); //First run
	squareFrameUpperMiddle.scaleVec(2, realFirstSpeedEnd + middleLayerDelay, realSecondSpeedEnd + middleLayerDelay, secondaryLength, lineThickness, primaryLength,lineThickness); //Second run
	
	
	
	// ----------------------- THIRD LAYER --------- TOP -------------------------------------------
	
	var squareFrameUpperOuter = new Sprite("SB BG/square.png");
	
	squareFrameUpperOuter.move(0, startTime + outerLayerDelay, realSecondSpeedEnd + outerLayerDelay, topStartingX, (topStartingY + 60), topEndingX, (topStartingY + 60));
	squareFrameUpperOuter.scaleVec(1, startTime + outerLayerDelay, realFirstSpeedEnd + outerLayerDelay, primaryLength, lineThickness, secondaryLength, lineThickness); //First run
	squareFrameUpperOuter.scaleVec(2, realFirstSpeedEnd + outerLayerDelay, realSecondSpeedEnd + outerLayerDelay, secondaryLength, lineThickness, primaryLength,lineThickness); //Second run
	
	// ----------------------- FIRST LAYER ---------- BOTTOM ---------------------------------------
	
	var squareFrameBottomInner = new Sprite("SB BG/square.png");
	
	squareFrameBottomInner.move(0, startTime, realSecondSpeedEnd, bottomStartingX, bottomStartingY, bottomEndingX, bottomStartingY);
	squareFrameBottomInner.scaleVec(1, startTime, realFirstSpeedEnd, primaryLength, lineThickness, secondaryLength, lineThickness); //First run
	squareFrameBottomInner.scaleVec(2, realFirstSpeedEnd, realSecondSpeedEnd, secondaryLength, lineThickness, primaryLength,lineThickness); //Second run

	

	// ----------------------- SECOND LAYER --------- BOTTOM ----------------------------------------
	
	var squareFrameBottomMiddle = new Sprite("SB BG/square.png");
	
	squareFrameBottomMiddle.move(0, startTime + middleLayerDelay, realSecondSpeedEnd + middleLayerDelay, bottomStartingX, (bottomStartingY + 30), bottomEndingX, (bottomStartingY + 30));
	squareFrameBottomMiddle.scaleVec(1, startTime + middleLayerDelay, realFirstSpeedEnd + middleLayerDelay, primaryLength, lineThickness, secondaryLength, lineThickness); //First run
	squareFrameBottomMiddle.scaleVec(2, realFirstSpeedEnd + middleLayerDelay, realSecondSpeedEnd + middleLayerDelay, secondaryLength, lineThickness, primaryLength,lineThickness); //Second run
	
	
	
	// ----------------------- THIRD LAYER --------- BOTTOM -----------------------------------------
	
	var squareFrameBottomOuter = new Sprite("SB BG/square.png");
	
	squareFrameBottomOuter.move(0, startTime + outerLayerDelay, realSecondSpeedEnd + outerLayerDelay, bottomStartingX, (bottomStartingY + 60), bottomEndingX, (bottomStartingY + 60));
	squareFrameBottomOuter.scaleVec(1, startTime + outerLayerDelay, realFirstSpeedEnd + outerLayerDelay, primaryLength, lineThickness, secondaryLength, lineThickness); //First run
	squareFrameBottomOuter.scaleVec(2, realFirstSpeedEnd + outerLayerDelay, realSecondSpeedEnd + outerLayerDelay, secondaryLength, lineThickness, primaryLength,lineThickness); //Second run
	
	
}

function musicalNote(startTime,speed) {
	var musicNote = new Sprite("SB BG/music");
	
	var randomColourChangeONE = rand(0,255);
	var randomColourChangeTWO = rand(0,255);
	var randomColourChangeTHREE = rand(0,255);
	
	var randomPosX = rand(-192,704);
	var randomPosY = rand(-64,416);
	var randomRotaA = rand(1, 5);
	var randomNeg = 1;
	var randomFlip = rand(0, 100);
	if(randomFlip > 50) {
		randomNeg = randomNeg * (-1);
	}
	
	randomPosX = randomPosX + 64;
	randomPosY = randomPosY + 55;
	
	musicNote.fade(1, startTime, startTime + 178, 0, 1);
	// musicNote.move(startTime, startTime + speed, randomPosX, randomPosY, randomPosX, randomPosY);
	musicNote.rotate(startTime, startTime + speed, randomRotaA, randomRotaA + (0.5 * randomNeg));
	musicNote.fade(1, startTime + speed - 178, startTime + speed, 1, 0);
	musicNote.color(randomColourChangeONE,randomColourChangeTWO,randomColourChangeTHREE);
}

function petal(startTime) {
	var minusY = 416;
	var topStartingX = -150;
	var topEndingX = 750;
	
	// -100 to 600
	var startY = rand(-100, 600);
	
	var petalONE = new Sprite("SB BG/petal1.png");
	petalONE.move(1, 0, startTime + 3000, topStartingX, startY, topEndingX, startY - minusY);
}

//petal(0);

function effectThing(startTime) {
	//var
}

function lemonLauncher(startTime, increasingNum) {
	var leftX = -192 + 64;
	var leftY = 448 + 55;
	
	var rightX = 704 + 64;
	var rightY = 448 + 55;
	
	var velocitySpeed = 1000;
	
	var variablyLeftX = increasingNum * 7;
	
	var minusForLeft = 400 - (increasingNum * 7);
	
	var startShootLeft = 100;
	var startShootRight = 100;
	
	var endY = -100;
	
	var fruitSize = 0.15;
	
	var masterSpeed = 30;
	
	// LEMON
	/*
	var colourChangeR = 252;
	var colourChangeG = rand(177, 252);
	var colourChangeB = 0;
	*/
	
	var colourChangeR = 131;
	var colourChangeG = rand(30,100);
	var colourChangeB = 253;
	
	var RBController = rand(90,180);
	var colourChangeRR = RBController;
	var colourChangeGG = 255;
	var colourChangeBB = RBController;
	
	var shootingFruitLeft = new Sprite("SB BG/grape.png");
	shootingFruitLeft.fade(0, startTime - 45, startTime, 0, 1);
	shootingFruitLeft.move(1, startTime + (increasingNum * masterSpeed), startTime + velocitySpeed + (increasingNum * masterSpeed), leftX, leftY, startShootLeft +  minusForLeft, endY);
	shootingFruitLeft.scale(0, startTime + (increasingNum * masterSpeed), startTime + velocitySpeed + (increasingNum * masterSpeed), fruitSize, fruitSize);
	shootingFruitLeft.color(colourChangeR, colourChangeG, colourChangeB);
	
	var shootingFruitRight = new Sprite("SB BG/grape.png");
	shootingFruitRight.fade(0, startTime - 45, startTime, 0, 1);
	shootingFruitRight.move(1, startTime + (increasingNum * masterSpeed), startTime + velocitySpeed + (increasingNum * masterSpeed), rightX, rightY, startShootRight + variablyLeftX, endY);
	shootingFruitRight.scale(0, startTime + (increasingNum * masterSpeed), startTime + velocitySpeed + (increasingNum * masterSpeed), fruitSize, fruitSize);
	// shootingFruitRight.color(colourChangeR, colourChangeG, colourChangeB);
	shootingFruitRight.color(colourChangeRR, colourChangeGG, colourChangeBB);
}

/*
for(var c=0; c<50; c++){
	lemonLauncher(126835, c);
}
*/



function rainThings(startTime) {
	// -192 to 704
	var xPosRandom = rand(-192,704);
	var yPos = -64;
	var yPosDone = 480;
	var negativeVal = 1;
	var errorRate = rand(0,30);
	var size = 0.15;
	var pickSide = rand(0, 100);
	if(pickSide > 50) {
		negativeVal = -1;
	}
	
	var randomColour = rand(0,1);
	
	var RBController = 0;
	var colourChangeR = 0;
	var colourChangeG = 0;
	var colourChangeB = 0;
	
	var grapeBoostSize = 0.13;
	
	/*
	var colourChangeR = 252;
	var colourChangeG = rand(177, 252);
	var colourChangeB = 0;
	*/
	
	if(randomColour == 0){
		colourChangeR = 131;
		colourChangeG = rand(30,100);
		colourChangeB = 253;
	}
	
	if(randomColour == 1){
		RBController = rand(90,180);
		colourChangeR = RBController;
		colourChangeG = 255;
		colourChangeB = RBController;
	}
	
	var fallingSpeed = 4500;
	
	var dropThings = new Sprite("SB BG/grape.png");
	
	dropThings.fade(0, startTime - 90, startTime, 0, 0.7);
	dropThings.move(1, startTime, startTime + fallingSpeed, xPosRandom, yPos, xPosRandom + (errorRate * negativeVal), yPosDone);
	dropThings.scale(0, startTime, startTime + fallingSpeed, size + grapeBoostSize, size + 0.05 + grapeBoostSize);
	dropThings.rotate(0, startTime, startTime + fallingSpeed, 0, (4 * negativeVal));
	dropThings.color(colourChangeR, colourChangeG, colourChangeB);
	dropThings.fade(2, startTime, startTime + fallingSpeed, 0.7, 0);
}

function carbonation(startTime) {
	var startPosX = rand(-192,704);
	var startPosY = 490;
	var distance = 280;
	var irregularityX = rand(-30, 30);
	var irregularity = rand(-70, 70);
	distance = distance + irregularity;
	
	var speed = 3000;
	
	var colourR = 0;
	var colourG = 150 + rand(0, 30);
	var colourB = 255;
	
	var bubbles = new Sprite("SB highlight.png");
	bubbles.scale(startTime, startTime + speed, 0.3, 0.4);
	bubbles.move(1, startTime, startTime + speed, startPosX, startPosY, startPosX + irregularityX, distance + irregularity);
//	bubbles.color(colourR, colourG, colourB);
	bubbles.fade(startTime - 45, startTime, 0, 0.7);
	bubbles.fade(startTime, startTime + speed, 0.7, 0.5);
}

function spinDisk(startTime, x, y, endTime, barsOfBeat, sizeThing, brightnessThing){
	x = x + 64;
	y = y + 55;
	
	// barsOfBeat = barsOfBeat + 1;
	
	var everyNewRotation = 1428;
	
	var layer0 = new Sprite("SB BG/layer0.png");
	var layer1 = new Sprite("SB BG/layer1.png");
	var layer2 = new Sprite("SB BG/layer2.png");
	var layer3 = new Sprite("SB BG/layer3.png");
	
	var randomLocationX = rand(0,50);
	var randomLocationY = rand(0,50);
	
	var randomNeg = 0;
	
	randomNeg = rand(0,100);
	if(randomNeg<50){
		randomLocationX = randomLocationX * (-1);
	}
	
	randomNeg = rand(0,100);
	if(randomNeg<50){
		randomLocationY = randomLocationY * (-1);
	}
	
	var saveRotation0 = 0;
	var saveRotation1 = 0;
	var saveRotation2 = 0;
	var saveRotation3 = 0;
	
	var rotation0 = 0;
	var rotation1 = 0;
	var rotation2 = 0;
	var rotation3 = 0;
	
	var pauseTime = 0;
	
	var size = sizeThing;
	var easing = 0;
	var brightness = brightnessThing;
	
	for(var g=0; g<barsOfBeat; g++) {
	
	if(g != 7){
		rotation0 = -rand(2, 4);
		rotation1 = rand(4, 6);
		rotation2 = -rand(5, 7);
		rotation3 = rand(3, 5);
		
		layer0.fade(startTime - 90, startTime, 0, brightness);
		layer0.scale(startTime, endTime, size, size);
		layer0.move(startTime, endTime, x, y, x + randomLocationX, y + randomLocationY);
		layer0.rotate(easing, startTime + (g * everyNewRotation), startTime + (g * everyNewRotation) + 1428, saveRotation0, saveRotation0 + rotation0);
		layer0.fade(startTime, endTime, brightness, brightness - 0.2);
		
		layer1.fade(startTime - 90, startTime, 0, brightness);
		layer1.scale(startTime, endTime, size + 0.05, size + 0.05);
		layer1.move(startTime, endTime, x, y, x + randomLocationX, y + randomLocationY);
		layer1.rotate(easing, startTime + (g * everyNewRotation), startTime + (g * everyNewRotation) + 1428, saveRotation1, saveRotation1 + rotation1);
		layer1.fade(startTime, endTime, brightness, brightness - 0.2);
		
		layer2.fade(startTime - 90, startTime, 0, brightness);
		layer2.scale(startTime, endTime, size + 0.09, size + 0.09);
		layer2.move(startTime, endTime, x, y, x + randomLocationX, y + randomLocationY);
		layer2.rotate(easing, startTime + (g * everyNewRotation), startTime + (g * everyNewRotation) + 1428, saveRotation2, saveRotation2 + rotation2);
		layer2.fade(startTime, endTime, brightness, brightness - 0.2);
		
		layer3.fade(startTime - 90, startTime, 0, brightness);
		layer3.scale(startTime, endTime, size + 0.12, size + 0.12);
		layer3.move(startTime, endTime, x, y, x + randomLocationX, y + randomLocationY);
		layer3.rotate(easing, startTime + (g * everyNewRotation), startTime + (g * everyNewRotation) + 1428, saveRotation3, saveRotation3 + rotation3);
		layer3.fade(startTime, endTime, brightness, brightness - 0.2);
	}
	else if(g == 7){
	
		// endTime = endTime - 357;
		// everyNewRotation = everyNewRotation - 357;
		
		startTime = 113978;
		pauseTime = 115049;
		endTime = 115406;
		
		rotation0 = -rand(1,3);
		rotation1 = rand(3,5);
		rotation2 = -rand(3,5);
		rotation3 = rand(1,4);
	
		var rotation0spec = -rand(12,15);
		var rotation1spec = rand(11,16);
		var rotation2spec = -rand(10,13);
		var rotation3spec = rand(14,16);
		
		layer0.fade(startTime - 90, startTime, 0, brightness);
		layer0.scale(startTime, endTime, size, size);
	//	layer0.move(startTime, endTime, x + randomLocationX, y + randomLocationY, x, y);
		layer0.rotate(0, startTime, pauseTime, saveRotation0, saveRotation0 + rotation0);
		layer0.rotate(1, pauseTime, endTime, saveRotation0 + rotation0, saveRotation0 + rotation0 + rotation0spec);
		layer0.fade(startTime, endTime, brightness, brightness - 0.2);
		
		layer1.fade(startTime - 90, startTime, 0, brightness);
		layer1.scale(startTime, endTime, size + 0.05, size + 0.05);
	//	layer1.move(startTime, endTime, x + randomLocationX, y + randomLocationY, x, y);
		layer1.rotate(0, startTime, pauseTime, saveRotation1, saveRotation1 + rotation1);
		layer1.rotate(1, pauseTime, endTime, saveRotation1 + rotation1, saveRotation1 + rotation1 + rotation1spec);
		layer1.fade(startTime, endTime, brightness, brightness - 0.2);
		
		layer2.fade(startTime - 90, startTime, 0, brightness);
		layer2.scale(startTime, endTime, size + 0.09, size + 0.09);
	//	layer2.move(startTime, endTime, x + randomLocationX, y + randomLocationY, x, y);
		layer2.rotate(0, startTime, pauseTime, saveRotation2, saveRotation2 + rotation2);
		layer2.rotate(1, pauseTime, endTime, saveRotation2 + rotation2, saveRotation2 + rotation2 + rotation2spec);
		layer2.fade(startTime, endTime, brightness, brightness - 0.2);
		
		layer3.fade(startTime - 90, startTime, 0, brightness);
		layer3.scale(startTime, endTime, size + 0.12, size + 0.12);
	//	layer3.move(startTime, endTime, x + randomLocationX, y + randomLocationY, x, y);
		layer3.rotate(0, startTime, pauseTime, saveRotation3, saveRotation3 + rotation3);
		layer3.rotate(1, pauseTime, endTime, saveRotation3 + rotation3, saveRotation3 + rotation0 + rotation3spec);
		layer3.fade(startTime, endTime, brightness, brightness - 0.2);
	}
	
	saveRotation0 = saveRotation0 + rotation0;
	saveRotation1 = saveRotation1 + rotation1;
	saveRotation2 = saveRotation2 + rotation2;
	saveRotation3 = saveRotation3 + rotation3;
	}
}

//spinDisk(103978, 512, 112, 115049, 8, 0.2, 0.75); // lower right
//spinDisk(103978, -32, 288, 115049, 8, 0.15, 0.7); // lower left
//           spinDisk(103978, 448, 32, 115049, 8, 0.25, 0.8); // upper right DON'T USE
//spinDisk(103978, 447, 363, 115049, 8, 0.3, 0.7); // lower middle
//spinDisk(

for(var b=0; b<40; b++){
	//carbonation(12549 + (b * 180));
	//carbonation(81120 + (b * 180));
	//carbonation(92549 + (b * 180));
	//carbonation(126835 + (b * 180));
	//carbonation(138263 + (b * 180));
}
for(var b=0; b<17; b++){
	//carbonation(17906 + (b * 180));
}
	

for(var z = 0; z < 45; z++) {
	// rainThings(58085 + (180 * z)); // LEMON
	// rainThings(126835 + (180 * z)); // GRAPE
	// rainThings(138263 + (180 * z)); // LEMON
}




var quantityMusicNotes = 30;
/*
for (var v = 0; v < quantityMusicNotes; v++) {
	musicalNote(34692,714);
}
*/

// Frame repeat => 20
var frameRepeater = 55;
/*
theFrame(1121, 1);
for (var i = 1; i < frameRepeater; i++) {
	theFrame(1121 + (2857 * i), 1);
}
*/

