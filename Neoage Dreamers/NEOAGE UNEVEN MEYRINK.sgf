function circleflake(x, startTime, speed) {
	var circleflake = new Sprite("SB BG/circle.png");
	var randomize = rand(5, 10);
	var randomizeCircleSize = rand(0, 50);
	var randomColourChangeONE = rand(-20, 50);
	var randomColourChangeTWO = rand(-40, 10);
	var randomSlant = rand(-10, 10);
	var decCircleSize = ((randomizeCircleSize * randomizeCircleSize) / 1000); 
	circleflake.move(startTime, startTime + speed, x, 500, x + randomSlant, 200);
	circleflake.fade(startTime - 200, startTime, 0, 1);
	circleflake.fade(startTime, startTime + speed, 1, 0);
	if((decCircleSize - 1) > 1){
		circleflake.scale(startTime, startTime + speed, 1 + decCircleSize, decCircleSize - 1);
	}
	else {
		circleflake.scale(startTime, startTime + speed, 1 + decCircleSize, 1);
	}
	circleflake.color(152 + randomColourChangeONE, 245 + randomColourChangeTWO, 255);
}

function randomCircleflake(startTime, speed) {
	var x = rand(-100, 700);
	if(x < 50) {
		circleflake(x, startTime, speed);
	}
	if(x > 200) {
		circleflake(x, startTime, speed);
	}
}

function randomNCircleflakes(startTime, n, speed) {
	for (var i = 1; i<= n; i++) {
	randomCircleflake(startTime, speed);
	}
}

function circleflakeGenerator(startTime, n, t, i, speed) {
	for (var a = 0; a < i; a++) {
	randomNCircleflakes(startTime + t*a, n, speed);
	}
}

function starConfetti(startTime, howManyStars, speed) {
	// var circleflake = new Sprite("SB BG/circle.png");
	
	for (var q = 0; q < howManyStars; q++){
		var circleflake = new Sprite("SB BG/circle.png");
		var randomizeLeft = rand(-400,256);
		var randomizeLeftY = rand(-100,100);
		var randomizeCircleSize = rand(0, 50);
		var decCircleSize = ((randomizeCircleSize * randomizeCircleSize) / 1000);
		circleflake.move(1, startTime, startTime + speed, 300, 500, randomizeLeft, randomizeLeftY);
		if((decCircleSize - 1) > 1){
			circleflake.scale(1, startTime, startTime + speed, 1 + decCircleSize, decCircleSize - 1);
		}
		else {
			circleflake.scale(1, startTime, startTime + speed, 1 + decCircleSize, 1);
		}
		var randomColourChangeONE = rand(0,255);
		var randomColourChangeTWO = rand(0,255);
		circleflake.color(randomColourChangeONE, randomColourChangeTWO, 255);
		circleflake.fade(startTime - 50, startTime, 0, 0.8);
		circleflake.fade(startTime, startTime + speed, 0.8, 0);
		
	}
	for (var w = 0; w < howManyStars; w++){
		var circleflake = new Sprite("SB BG/circle.png");
		var randomizeRight = rand(256,1000);
		var randomizeRightY = rand(-100,100);
		var randomizeCircleSize = rand(0, 50);
		var decCircleSize = ((randomizeCircleSize * randomizeCircleSize) / 1000); 
		circleflake.move(1, startTime, startTime + speed, 300, 500, randomizeRight, randomizeRightY);
		if((decCircleSize - 1) > 1){
			circleflake.scale(1, startTime, startTime + speed, 1 + decCircleSize, decCircleSize - 1);
		}
		else {
			circleflake.scale(1, startTime, startTime + speed, 1 + decCircleSize, 1);
		}
		var randomColourChangeONE = rand(0,255);
		var randomColourChangeTWO = rand(0,255);
		var randomColourChangeTHREE = rand(0,255);
		circleflake.color(randomColourChangeONE, randomColourChangeTWO, 255);
		circleflake.fade(startTime - 50, startTime, 0, 0.8);
		circleflake.fade(startTime, startTime + speed, 0.8, 0);
	}
}

//function sunStar(centerX, centerY, startTime, colour) {
function sunStar(startTime, speed, centerX, centerY, colour) {

	//var speed = 1;

	centerX = centerX + 64;
	centerY = centerY + 55;
	
	var speedDur = speed * 368;
	
	// OPEN (12 Tentacles = 30 degrees)
	var degreeThings = 0.785398163;
	
	//for (var y = 0; y <= 12; y++){
	
	var thickNess = 0.3;
	var armLength = 70;
	
	var randomOne = rand(1,10);
	var randomTwo = rand(1,10);
	var randomThree = rand(1,10);
	var randomFour = rand(1,10);
	
	var longestLengthOne = randomOne;
	var longestLengthTwo = randomTwo;
	var longestLengthThree = randomThree;
	var longestLengthFour = randomFour;
	var longestLengthFive = randomOne;
	var longestLengthSix = randomTwo;
	var longestLengthSeven = randomThree;
	var longestLengthEight = randomFour;
	var shortestLength = 0.5;
	
	/*
	var degreeArmOne = (sin(90 * rand(-20, 20)));
	var degreeArmTwo
	var degreeArmThree
	var degreeArmFour
	var degreeArmFive
	var degreeArmSix
	var degreeArmSeven
	var degreeArmEight
	
	
	var firstArm = (armLength * degreenArmOne);
	var secondArm = 
	var thirdArm =
	var fourthArm =
	var fifthArm =
	var sixthArm =
	var seventhArm =
	var eighthArm =
	*/
	
		var tentaclesL = new Sprite("SB BG/square.png");
		tentaclesL.fade(startTime - 92, startTime, 0, 1);
		tentaclesL.move(startTime, startTime + speedDur, centerX, centerY, centerX - 70, centerY);
		tentaclesL.scaleVec(startTime, startTime + 184, shortestLength, thickNess, longestLengthOne, thickNess);
		tentaclesL.scaleVec(startTime + 184, startTime + speedDur, longestLengthOne, thickNess, shortestLength, thickNess);
		tentaclesL.rotate(startTime - 46, startTime, 0, degreeThings * 0);
	//	tentaclesL.color(152 + randomColourChangeONE, 245 + randomColourChangeTWO, 255);
		
		var tentaclesLT = new Sprite("SB BG/square.png");
		tentaclesLT.fade(startTime - 92, startTime, 0, 1);
		tentaclesLT.move(startTime, startTime + speedDur, centerX, centerY, centerX - 50, centerY - 50);
		tentaclesLT.scaleVec(startTime, startTime + 184, shortestLength, thickNess, longestLengthTwo, thickNess);
		tentaclesLT.scaleVec(startTime + 184, startTime + speedDur, longestLengthTwo, thickNess, shortestLength, thickNess);
		tentaclesLT.rotate(startTime - 46, startTime, 0, degreeThings * 1);
	//	tentaclesLT.color(152 + randomColourChangeONE, 245 + randomColourChangeTWO, 255);
		
		var tentaclesT = new Sprite("SB BG/square.png");
		tentaclesT.fade(startTime - 92, startTime, 0, 1);
		tentaclesT.move(startTime, startTime + speedDur, centerX, centerY, centerX, centerY - 70);
		tentaclesT.scaleVec(startTime, startTime + 184, shortestLength, thickNess, longestLengthThree, thickNess);
		tentaclesT.scaleVec(startTime + 184, startTime + speedDur, longestLengthThree, thickNess, shortestLength, thickNess);
		tentaclesT.rotate(startTime - 46, startTime, 0, degreeThings * 2);
	//	tentaclesT.color(152 + randomColourChangeONE, 245 + randomColourChangeTWO, 255);
		
		var tentaclesRT = new Sprite("SB BG/square.png");
		tentaclesRT.fade(startTime - 92, startTime, 0, 1);
		tentaclesRT.move(startTime, startTime + speedDur, centerX, centerY, centerX + 50, centerY - 50);
		tentaclesRT.scaleVec(startTime, startTime + 184, shortestLength, thickNess, longestLengthFour, thickNess);
		tentaclesRT.scaleVec(startTime + 184, startTime + speedDur, longestLengthFour, thickNess, shortestLength, thickNess);
		tentaclesRT.rotate(startTime - 46, startTime, 0, degreeThings * 3);
	// 	tentaclesRT.color(152 + randomColourChangeONE, 245 + randomColourChangeTWO, 255);
		
		var tentaclesR = new Sprite("SB BG/square.png");
		tentaclesR.fade(startTime - 92, startTime, 0, 1);
		tentaclesR.move(startTime, startTime + speedDur, centerX, centerY, centerX + 70, centerY);
		tentaclesR.scaleVec(startTime, startTime + 184, shortestLength, thickNess, longestLengthFive, thickNess);
		tentaclesR.scaleVec(startTime + 184, startTime + speedDur, longestLengthFive, thickNess, shortestLength, thickNess);
		tentaclesR.rotate(startTime - 46, startTime, 0, degreeThings * 4);
	//	tentaclesR.color(152 + randomColourChangeONE, 245 + randomColourChangeTWO, 255);
		
		var tentaclesRB = new Sprite("SB BG/square.png");
		tentaclesRB.fade(startTime - 92, startTime, 0, 1);
		tentaclesRB.move(startTime, startTime + speedDur, centerX, centerY, centerX + 50, centerY + 50);
		tentaclesRB.scaleVec(startTime, startTime + 184, shortestLength, thickNess, longestLengthSix, thickNess);
		tentaclesRB.scaleVec(startTime + 184, startTime + speedDur, longestLengthSix, thickNess, shortestLength, thickNess);
		tentaclesRB.rotate(startTime - 46, startTime, 0, degreeThings * 5);
	//	tentaclesRB.color(152 + randomColourChangeONE, 245 + randomColourChangeTWO, 255);
		
		var tentaclesB = new Sprite("SB BG/square.png");
		tentaclesB.fade(startTime - 92, startTime, 0, 1);
		tentaclesB.move(startTime, startTime + speedDur, centerX, centerY, centerX, centerY + 70);
		tentaclesB.scaleVec(startTime, startTime + 184, shortestLength, thickNess, longestLengthSeven, thickNess);
		tentaclesB.scaleVec(startTime + 184, startTime + speedDur, longestLengthSeven, thickNess, shortestLength, thickNess);
		tentaclesB.rotate(startTime - 46, startTime, 0, degreeThings * 6);
	//	tentaclesB.color(152 + randomColourChangeONE, 245 + randomColourChangeTWO, 255);
		
		var tentaclesLB = new Sprite("SB BG/square.png");
		tentaclesLB.fade(startTime - 92, startTime, 0, 1);
		tentaclesLB.move(startTime, startTime + speedDur, centerX, centerY, centerX - 50, centerY + 50);
		tentaclesLB.scaleVec(startTime, startTime + 184, shortestLength, thickNess, longestLengthEight, thickNess);
		tentaclesLB.scaleVec(startTime + 184, startTime + speedDur, longestLengthEight, thickNess, shortestLength, thickNess);
		tentaclesLB.rotate(startTime - 46, startTime, 0, degreeThings * 7);
	//	tentaclesLB.color(152 + randomColourChangeONE, 245 + randomColourChangeTWO, 255);
	//}
	
	var dotflake = new Sprite("SB BG/dot.png");
	dotflake.fade(startTime - 92, startTime, 0, 1);
	dotflake.move(startTime, startTime + speedDur, centerX, centerY, centerX, centerY);
//	var randomColourChangeONE = rand(-20, 50);
//	var randomColourChangeTWO = rand(-40, 10);
//	var randomColourChangeTHREE = rand(0,255);

	//dotflake.color(152 + randomColourChangeONE, 245 + randomColourChangeTWO, 255);
	dotflake.scale(startTime, startTime + speedDur, 1, 1.5);
	dotflake.fade(startTime, (startTime + (speedDur - 92)), 1, 0.9);
	dotflake.fade((startTime + (speedDur - 92)), (startTime + speedDur), 0.9, 0);
	
	
//	Error: 35 for centerX - 35
	
// Left: 		centerX, centerY, centerX - 70, centerY
// Left-top:	centerX, centerY, centerX - 50, centerY - 50
// Top:			centerX, centerY, centerX, centerY - 70
// Right-top:	centerX, centerY, centerX + 50, centerY - 50
// Right:		centerX, centerY, centerX + 70, centerY
// Right-bottom:centerX, centerY, centerX + 50, centerY + 50
// Bottom:		centerX, centerY, centerX, centerY + 70
// Left-bottom: centerX, centerY, centerX - 50, centerY + 50


	// Highlight
	
	var speedFade = 1472;
	var darkness = 1;
	
	var highlight = new Sprite("SB BG/highlight");
	
	if(colour == 1) {
		highlight.color(0,255,255); // Cyan
		darkness = 0.7;
	}
	if(colour == 2) {
		highlight.color(0,128,255); // Blue
		darkness = 0.5;
	}
	if(colour == 3) {
		highlight.color(0,255,128); // Green
		darkness = 0.6;
	}
	if(colour == 4) {
		highlight.color(252,230,182); // Peach
		darkness = 0.7;
	}
	if(colour == 5) {
		highlight.color(251,133,62); // Apricot
		darkness = 0.5;
	}
	highlight.fade(2, startTime - 92, startTime, 0, darkness + 0.05);
	highlight.move(startTime, startTime + speedFade, centerX, centerY, centerX, centerY);
	highlight.fade(1, startTime, startTime + speedFade, darkness + 0.05, 0);


}

function leHighlight(centerX, centerY, startTime, colour) {

	/*
	
	Combo1 : 0,255,255
	Combo2 : 0,128,255
	Combo3 : 0,255,128
	Combo4 : 252,230,182
	Combo5 : 251,133,62
	
	*/

	centerX = centerX + 64;
	centerY = centerY + 55;

	var speed = 1472;
	var darkness = 1;

	var highlight = new Sprite("SB BG/highlight");
	if(colour == 1) {
		highlight.color(0,255,255); // Cyan
		darkness = 0.7;
	}
	if(colour == 2) {
		highlight.color(0,128,255); // Blue
		darkness = 0.5;
	}
	if(colour == 3) {
		highlight.color(0,255,128); // Green
		darkness = 0.6;
	}
	if(colour == 4) {
		highlight.color(252,230,182); // Peach
		darkness = 0.7;
	}
	if(colour == 5) {
		highlight.color(251,133,62); // Apricot
		darkness = 0.5;
	}
	highlight.fade(2, startTime - 92, startTime, 0, darkness);
	highlight.move(startTime, startTime + speed, centerX, centerY, centerX, centerY);
	highlight.fade(1, startTime, startTime + speed, darkness, 0);

}

function ringBlast(centerX, centerY, startTime) {
	centerX = centerX + 64;
    centerY = centerY + 55;
	var ringEffect = new Sprite("SB BG/ring.png");
	var ringAppear = 92;
	var ringSpeed = 736;
	ringEffect.fade(2, startTime - ringAppear, startTime, 0, 1);
	ringEffect.move(startTime, startTime + ringSpeed, centerX, centerY, centerX, centerY);
	ringEffect.scale(startTime, startTime + ringSpeed, 0.2, 1);
	ringEffect.fade(1, startTime, startTime + ringSpeed, 1, 0);

}

/*
ringBlast(256,192,24865);
ringBlast(280,252,13086);
ringBlast(384,100,18975);
ringBlast(144,168,24313);
ringBlast(312,268,28546);
ringBlast(328,340,31490);
ringBlast(228,188,32226);
ringBlast(64,172,32963);
ringBlast(243,183,34435);
ringBlast(331,188,35907);
ringBlast(340,280,38852);
ringBlast(272,72,40325);
ringBlast(360,192,43269);
ringBlast(360,192,44742);
ringBlast(304,256,46214);
ringBlast(168,128,49159);
ringBlast(340,308,50631);
ringBlast(132,176,51736);
ringBlast(100,364,52104);
ringBlast(208,168,55969);
ringBlast(320,96,63883);
ringBlast(232,164,65171);
ringBlast(236,152,69772);
ringBlast(208,180,71061);
ringBlast(440,168,74005);
ringBlast(184,112,75662);
ringBlast(108,208,76950);
ringBlast(388,364,78607);
ringBlast(52,168,81551);
ringBlast(260,312,82104);
ringBlast(36,184,82840);
ringBlast(392,112,84496);
ringBlast(296,192,85416);
ringBlast(136,208,85785);
ringBlast(88,32,86153);
ringBlast(260,156,86337);
ringBlast(376,120,87257);
ringBlast(312,340,91674);
ringBlast(360,160,93331);
ringBlast(156,184,96275);
ringBlast(244,112,97564);
ringBlast(352,184,98300);
ringBlast(168,196,99036);
ringBlast(320,176,103453);
ringBlast(140,76,105110);
ringBlast(188,268,109343);
ringBlast(480,156,109895);
ringBlast(312,324,110999);
ringBlast(272,116,112288);
ringBlast(113,82,112656);
ringBlast(352,232,112840);
ringBlast(164,276,116889);
ringBlast(340,252,117625);
ringBlast(148,288,118361);
ringBlast(396,216,119834);
ringBlast(39,180,121306);
ringBlast(100,160,124251);
ringBlast(52,300,125723);
*/

//(Starting Point / How Many at ONE line / Duration between line / quantity / speed of going up [seconds])

// Main
//circleflakeGenerator(13086, 1, 184, 680, 5000);
// Fast
//circleflakeGenerator(28546, 1, 92, 615, 2000); //Beginning
//circleflakeGenerator(87257, 1, 92, 190, 1500); //Start of Kiai
//circleflakeGenerator(113944, 1, 92, 295, 2000);




// Effects

//starExplode (StartTime, Quantity, Speed)
//starConfetti(87257, 15, 1000);
//starConfetti(99036, 15, 1000);
//starConfetti(113944, 15, 1000);

/*

 1: Cyan
 2: Blue
 3: Green
 4: Peach
 5: Apricot
 
*/

//sunStar (X, Y, StartTime, Colour)

/* MEYRINK
sunStar(365,228,125723,5);
sunStar(218,178,126091,5);
sunStar(376,25,126459,5);
sunStar(295,229,126827,5);
sunStar(243,128,127011,5);
sunStar(398,202,127196,1);
sunStar(433,340,127564,1);
sunStar(305,349,127840,1);
sunStar(305,349,127932,1);
sunStar(295,229,128116,1);
sunStar(185,297,128300,1);
sunStar(100,95,128668,2);
sunStar(80,318,129220,2);
sunStar(19,187,129404,2);
sunStar(158,198,129588,2);
sunStar(2,265,129772,2);
sunStar(27,105,129956,2);
sunStar(103,249,130140,3);
sunStar(336,149,130508,3);
sunStar(217,145,130784,3);
sunStar(217,145,130876,3);
sunStar(377,72,131061,3);
sunStar(377,72,131153,3);
sunStar(377,72,131245,3);
sunStar(269,213,131429,3);
sunStar(269,213,131521,3);
sunStar(269,213,131613,4);
sunStar(365,358,131981,4);
sunStar(496,227,132349,4);
sunStar(341,92,132717,4);
sunStar(219,145,133085,5);
sunStar(333,208,133269,5);
sunStar(247,70,133453,5);
sunStar(139,115,133729,5);
sunStar(139,115,133821,5);
sunStar(87,25,134005,5);
sunStar(219,145,134189,5);
sunStar(111,328,134557,1);
sunStar(306,310,134926,1);
sunStar(195,134,135294,1);
sunStar(294,220,135478,1);
sunStar(158,260,135662,1);
sunStar(220,99,135846,1);
sunStar(320,216,136030,2);
sunStar(441,206,136306,2);
sunStar(441,206,136398,2);
sunStar(477,107,136582,2);
sunStar(363,53,136766,2);
sunStar(371,151,136950,2);
sunStar(452,19,137134,2);
sunStar(281,108,137318,2);
*/

/*
sunStar(441,206,137502,3,2);
sunStar(328,227,138607,4,2);
sunStar(201,248,139711,5,2);
*/

/* THIS IS GAIA'S INSANE
sunStar(126091, 1, 328, 128,2);
sunStar(126459, 1, 252, 232,2);
sunStar(126827, 1, 196, 144,2);
sunStar(127196, 1, 64, 152,3);
sunStar(127564, 1, 164, 236,3);
sunStar(127932, 1, 288, 280,3);
sunStar(128300, 1, 264, 52,3);
sunStar(128668, 1, 196, 144,4);
sunStar(129036, 1, 344, 76,4);
sunStar(129404, 1, 332, 324,4);
sunStar(129772, 1, 208, 276,4);
sunStar(130140, 1, 192, 132,5);
sunStar(130508, 1, 176, 276,5);
sunStar(130876, 1, 272, 112,5);
sunStar(131245, 1, 208, 276,5);
sunStar(131613, 1, 84, 120,1);
sunStar(131981, 1, 272, 112,1);
sunStar(132349, 1, 156, 288,1);
sunStar(132717, 1, 360, 88,1);
sunStar(133085, 1, 160, 164,2);
sunStar(133452, 1, 136, 280,2);
sunStar(133821, 1, 0, 208,2);
sunStar(134189, 1, 216, 188,2);
sunStar(134557, 1, 320, 216,3);
sunStar(134926, 1, 408, 152,3);
sunStar(135294, 1, 400, 276,3);
sunStar(135662, 1, 212, 280,3);
sunStar(136030, 1, 36, 312,4);
sunStar(136398, 1, 256, 356,4);
sunStar(136582, 1, 375, 284,4);
sunStar(136766, 1, 192, 204,4);
sunStar(136950, 1, 394, 365,4);
sunStar(137134, 1, 472, 152,4);
sunStar(137318, 1, 272, 120,4);
sunStar(137502, 2, 344, 224,5);
sunStar(138607, 2, 256, 192,1);
sunStar(139711, 2, 168, 160,2);
*/




// X:256 Y:400 (Bottom middle) for confetti

// ONLY HIGHLIGHTS!

// Start: 109,895
// End: 125,723

/*
 1: Cyan
 2: Blue
 3: Green
 4: Peach
 5: Apricot
*/

/* EASY
leHighlight(268,28,113576,3);
leHighlight(184,72,113944,4);
leHighlight(244,316,115048,4);
leHighlight(332,356,115416,4);
leHighlight(432,256,116153,4);
leHighlight(304,180,116889,5);
leHighlight(260,96,118729,5);
leHighlight(172,136,119097,5);
leHighlight(16,192,119834,1);
leHighlight(84,332,120570,1);
leHighlight(320,348,121674,1);
leHighlight(396,288,122042,1);
leHighlight(332,124,122778,2);
leHighlight(188,60,123515,2);
leHighlight(136,148,124251,2);
leHighlight(232,360,125355,2);
*/

/* NORMAL
leHighlight(440,308,113576,5);
leHighlight(340,356,113944,1);
leHighlight(144,276,114680,1);
leHighlight(216,192,115416,1);
leHighlight(108,120,116153,1);
leHighlight(200,64,116889,2);
leHighlight(368,164,117625,2);
leHighlight(208,260,118361,2);
leHighlight(412,312,119097,2);
leHighlight(472,220,119834,3);
leHighlight(360,108,120570,3);
leHighlight(140,116,121306,3);
leHighlight(196,240,122042,3);
leHighlight(248,336,122778,4);
leHighlight(440,260,123515,4);
leHighlight(360,92,124251,4);
leHighlight(276,280,124987,4);
leHighlight(232,248,125539,4);
*/

/* HARD DIFF
leHighlight(356,40,113576,3);
leHighlight(296,224,113944,4);
leHighlight(140,272,114312,4);
leHighlight(72,204,114496,4);
leHighlight(140,272,114864,4);
leHighlight(200,196,115048,4);
leHighlight(268,52,115416,5);
leHighlight(296,224,115785,5);
leHighlight(368,292,115969,5);
leHighlight(460,256,116337,5);
leHighlight(388,192,116521,5);
leHighlight(248,272,116889,1);
leHighlight(40,192,117441,1);
leHighlight(40,192,117533,1);
leHighlight(40,192,117625,1);
leHighlight(152,24,118177,1);
leHighlight(152,24,118269,1);
leHighlight(152,24,118361,2);
leHighlight(304,104,118729,2);
leHighlight(360,28,119097,2);
leHighlight(360,28,119281,2);
leHighlight(432,92,119465,2);
leHighlight(400,232,119834,3);
leHighlight(160,188,120386,3);
leHighlight(52,88,120754,4);
leHighlight(112,40,121306,4);
leHighlight(344,40,121858,4);
leHighlight(424,96,122226,4);
leHighlight(504,152,122410,4);
leHighlight(400,260,122778,5);
leHighlight(216,196,123330,5);
leHighlight(144,264,123699,5);
leHighlight(52,232,123883,5);
leHighlight(128,168,124067,5);
leHighlight(160,280,124251,1);
leHighlight(24,256,124803,1);
leHighlight(100,192,125171,1);
leHighlight(192,156,125539,1);
*/
// THIS IS FOR GAIA'S INSANE
/*
leHighlight(480,156,109895,4);
leHighlight(348,60,110079,4);
leHighlight(310,76,110171,4);
leHighlight(292,112,110263,4);
leHighlight(292,152,110355,4);
leHighlight(317,183,110447,4);
leHighlight(353,199,110539,4);
leHighlight(380,228,110631,4);
leHighlight(394,265,110723,4);
leHighlight(387,304,110815,4);
leHighlight(358,332,110907,4);
leHighlight(312,324,110999,1);
leHighlight(224,196,111183,1);
leHighlight(88,260,111367,1);
leHighlight(200,168,111735,1);
leHighlight(88,76,112104,1);
leHighlight(272,116,112288,2);
leHighlight(352,232,112840,2);
*/
// *** ABOVE IS UNUSED PART***
/*
leHighlight(60,168,113576,3);
leHighlight(156,244,113944,4);
leHighlight(368,108,114312,4);
leHighlight(384,272,114496,4);
leHighlight(384,272,114588,4);
leHighlight(384,272,114680,4);
leHighlight(476,160,114864,4);
leHighlight(272,204,115048,4);
leHighlight(140,204,115416,5);
leHighlight(296,28,115785,5);
leHighlight(240,180,115969,5);
leHighlight(240,180,116061,5);
leHighlight(240,180,116153,5);
leHighlight(140,80,116337,5);
leHighlight(348,108,116521,5);
leHighlight(164,276,116889,1);
leHighlight(256,84,117257,1);
leHighlight(340,252,117441,1);
leHighlight(340,252,117533,1);
leHighlight(340,252,117625,1);
leHighlight(240,180,117993,1);
leHighlight(148,288,118177,1);
leHighlight(148,288,118269,1);
leHighlight(148,288,118361,2);
leHighlight(72,136,118545,2);
leHighlight(48,252,118729,2);
leHighlight(176,96,118913,2);
leHighlight(188,104,119005,2);
leHighlight(200,112,119097,2);
leHighlight(336,160,119465,2);
leHighlight(396,216,119834,3);
leHighlight(396,344,120202,3);
leHighlight(276,216,120386,3);
leHighlight(276,216,120478,3);
leHighlight(276,216,120570,3);
leHighlight(156,320,120754,3);
leHighlight(114,338,120846,3);
leHighlight(70,328,120938,3);
leHighlight(30,306,121030,3);
leHighlight(7,266,121122,3);
leHighlight(7,221,121214,3);
leHighlight(39,180,121306,4);
leHighlight(136,64,121490,4);
leHighlight(0,48,121674,4);
leHighlight(108,168,12185,4);
leHighlight(108,168,121950,4);
leHighlight(108,168,122042,4);
leHighlight(404,216,122410,4);
leHighlight(236,256,122686,4);
leHighlight(236,256,122778,5);
leHighlight(312,144,123146,5);
leHighlight(132,184,123330,5);
leHighlight(132,184,123423,5);
leHighlight(132,184,123515,5);
leHighlight(232,84,123699,5);
leHighlight(236,256,123883,5);
leHighlight(100,160,124067,5);
leHighlight(100,160,124159,5);
leHighlight(100,160,124251,1);
leHighlight(96,316,124619,1);
leHighlight(236,256,124895,1);
leHighlight(236,256,124987,1);
leHighlight(112,116,125171,1);
leHighlight(112,116,125263,1);
leHighlight(112,116,125355,1);
leHighlight(52,300,125539,1);
leHighlight(52,300,125631,1);
leHighlight(52,300,125723,2);
*/

//MEYRINK'S INSANE
leHighlight(68,221,113576,1);
leHighlight(133,83,113944,2);
leHighlight(378,111,114496,2);
leHighlight(378,111,114588,2);
leHighlight(378,111,114680,2);
leHighlight(202,141,115048,2);
leHighlight(321,351,115416,3);
leHighlight(187,224,115969,3);
leHighlight(187,224,116061,3);
leHighlight(187,224,116153,3);
leHighlight(300,140,116337,3);
leHighlight(279,282,116521,3);
leHighlight(202,141,116705,3);
leHighlight(344,226,116889,3);
leHighlight(507,207,117257,4);
leHighlight(504,358,117441,4);
leHighlight(504,358,117533,4);
leHighlight(504,358,117625,4);
leHighlight(284,311,117993,4);
leHighlight(416,275,118177,4);
leHighlight(416,275,118269,4);
leHighlight(416,275,118361,5);
leHighlight(315,234,118545,5);
leHighlight(385,371,118729,5);
leHighlight(388,195,118913,5);
leHighlight(168,221,119373,5);
leHighlight(168,221,119465,5);
leHighlight(61,38,119834,1);
leHighlight(10,243,120386,1);
leHighlight(10,243,120478,1);
leHighlight(10,243,120570,1);
leHighlight(97,224,120846,1);
leHighlight(97,224,120938,1);
leHighlight(232,158,121306,2);
leHighlight(277,271,121674,2);
leHighlight(364,190,121950,2);
leHighlight(364,190,122042,2);
leHighlight(400,321,122226,2);
leHighlight(268,194,122410,2);
leHighlight(97,224,122778,3);
leHighlight(178,186,123330,3);
leHighlight(178,186,123423,3);
leHighlight(178,186,123515,3);
leHighlight(217,330,123699,3);
leHighlight(289,233,123883,3);
leHighlight(115,278,124067,3);
leHighlight(301,315,124251,4);
leHighlight(482,183,124619,4);
leHighlight(320,62,124987,4);
leHighlight(499,109,125171,4);
leHighlight(499,109,125263,4);
leHighlight(499,109,125355,4);
leHighlight(365,228,125539,4);
leHighlight(365,228,125631,4);
leHighlight(365,228,125723,5);